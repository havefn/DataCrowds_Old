@model DataCrowds.Models.IndexViewModel
@{
    ViewBag.Title = "Manage";
}

<h2>@ViewBag.Title.</h2>

<p class="text-success">@ViewBag.StatusMessage</p>
<div>
    <h4>Change your account settings</h4>
    <hr />  
    <dl class="dl-horizontal">
        <dt>Username:</dt>
        <dd>
               @Model.username @*[@Html.ActionLink("Change", "ChangeUsername")]*@
        </dd>
        <dt>Password: </dt>
        <dd> 
            [
            @if (Model.HasPassword)
            {
                @Html.ActionLink("Change", "ChangePassword")
            }
            else
            {
                @Html.ActionLink("Create", "SetPassword")
            }
            ]
        </dd>
        <dt>Email Address:</dt>
        <dd>
            @Model.email  @*[@Html.ActionLink("Change", "ChangeEmail")]*@
        </dd>
        <dt>Occupation:</dt>
        <dd>
            @Model.occupation  @*[@Html.ActionLink("Change", "ChangeJob")]*@
        </dd>
        <dt>Gender:</dt>
        <dd>
            @Model.gender  @*[@Html.ActionLink("Change", "ChangeGender")]*@
        </dd>
        <dt>Birth Date:</dt>
        <dd>
                @Model.birthDate.Date
        </dd>
        
        
        <dt>External Logins:</dt>
        <dd>
            @Model.Logins.Count  [ @Html.ActionLink("Manage", "ManageLogins") ]
        </dd>
        @*
            Phone Numbers can used as a second factor of verification in a two-factor authentication system.
             
             See <a href="http://go.microsoft.com/fwlink/?LinkId=403804">this article</a>
                for details on setting up this ASP.NET application to support two-factor authentication using SMS.
             
             Uncomment the following block after you have set up two-factor authentication
        *@
        @*  
            <dt>Phone Number:</dt>
            <dd>
                @(Model.PhoneNumber ?? "None")
                @if (Model.PhoneNumber != null)
                {
                    <br />
                    <text>[&nbsp;&nbsp;@Html.ActionLink("Change", "AddPhoneNumber")&nbsp;&nbsp;]</text>
                    using (Html.BeginForm("RemovePhoneNumber", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                    {
                        @Html.AntiForgeryToken()
                        <text>[<input type="submit" value="Remove" class="btn-link" />]</text>
                    }
                }
                else
                {
                    <text>[&nbsp;&nbsp;@Html.ActionLink("Add", "AddPhoneNumber")
                }
            </dd>
        *@
        @*@<dt>Two-Factor Authentication:</dt>
        <dd>
            <p>
                There are no two-factor authentication providers configured. See <a href="http://go.microsoft.com/fwlink/?LinkId=403804">this article</a>
                for details on setting up this ASP.NET application to support two-factor authentication.
            </p>
            @*if (Model.TwoFactor)
                {
                    using (Html.BeginForm("DisableTwoFactorAuthentication", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                    {
                        @Html.AntiForgeryToken()
                        <text>Enabled
                        <input type="submit" value="Disable" class="btn btn-link" />
                        </text>
                    }
                }
                else
                {
                    using (Html.BeginForm("EnableTwoFactorAuthentication", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                    {
                        @Html.AntiForgeryToken()
                        <text>Disabled
                        <input type="submit" value="Enable" class="btn btn-link" />
                        </text>
                    }
                }
        </dd>*@

        <table class="table">
            <tr>
                <th>
                    owned1
                </th>
                <th>
                    owned2
                </th>
            </tr>
            
            @if (Model.OwnedData != null)
            {

                foreach (var item in Model.OwnedData)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.title)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.description)
                        </td>
                        <td>
                            @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                            @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                            @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                        </td>
                    </tr>
                }

            }
        </table>

        <table class="table">
            <tr>
                <th>
                    bought1
                </th>
                <th>
                    bought2
                </th>
            </tr>
            
            @if (Model.BoughtData != null)
            {

                foreach (var item in Model.BoughtData)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.title)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.description)
                        </td>
                        <td>
                            @Html.ActionLink("Details", "Details", new { id = item.Id })
                        </td>
                    </tr>
                }
            }

        </table>

        

    </dl>
</div>
